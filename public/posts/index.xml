<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on VSVnakers 主页</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on VSVnakers 主页</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 01 Jun 2025 02:58:00 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 0 配置 Neovim</title>
      <link>http://localhost:1313/posts/neovim/</link>
      <pubDate>Sun, 01 Jun 2025 02:58:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/neovim/</guid>
      <description>&lt;h1 id=&#34;-从-0-配置-neovim-成为-vscode-替代开发环境v095&#34;&gt;🚀 从 0 配置 Neovim 成为 VSCode 替代开发环境（v0.9.5）&lt;/h1&gt;
&lt;h2 id=&#34;-环境说明&#34;&gt;✅ 环境说明&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Neovim 版本：v0.9.5（Ubuntu 默认仓库版本）&lt;/li&gt;
&lt;li&gt;系统平台：WSL / Ubuntu&lt;/li&gt;
&lt;li&gt;插件管理器：&lt;code&gt;packer.nvim&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-第一步安装-neovim&#34;&gt;🧱 第一步：安装 Neovim&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install neovim -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;确认版本：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nvim --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;输出应为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;NVIM v0.9.5
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;h2 id=&#34;-第二步安装-git-和-node供-lsp-和插件使用&#34;&gt;📦 第二步：安装 &lt;code&gt;git&lt;/code&gt; 和 &lt;code&gt;node&lt;/code&gt;（供 LSP 和插件使用）&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install git curl -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 安装 nodejs（供 pyright 使用）&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install nodejs -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-第三步安装插件管理器-packernvim&#34;&gt;📁 第三步：安装插件管理器 &lt;code&gt;packer.nvim&lt;/code&gt;&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone --depth &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; https://github.com/wbthomason/packer.nvim &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;~/.local/share/nvim/site/pack/packer/start/packer.nvim
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-第四步创建-neovim-配置文件&#34;&gt;⚙️ 第四步：创建 Neovim 配置文件&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p ~/.config/nvim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nvim ~/.config/nvim/init.lua
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-第五步粘贴完整配置适配-v095&#34;&gt;🧠 第五步：粘贴完整配置（适配 v0.9.5）&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-lua&#34; data-lang=&#34;lua&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 基础设置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.number &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.relativenumber &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.tabstop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.shiftwidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.expandtab &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.opt.termguicolors &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 插件加载&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;packer&amp;#39;&lt;/span&gt;).startup(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(use)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wbthomason/packer.nvim&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-lualine/lualine.nvim&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-tree/nvim-tree.lua&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-tree/nvim-web-devicons&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;folke/tokyonight.nvim&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-lua/plenary.nvim&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-telescope/telescope.nvim&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use { &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-treesitter/nvim-treesitter&amp;#39;&lt;/span&gt;, run &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;:TSUpdate&amp;#39;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;neovim/nvim-lspconfig&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hrsh7th/nvim-cmp&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hrsh7th/cmp-nvim-lsp&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;L3MON4D3/LuaSnip&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  use &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;saadparwaiz1/cmp_luasnip&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 启用主题&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim.cmd&lt;span style=&#34;color:#e6db74&#34;&gt;[[colorscheme tokyonight]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- UI 插件初始化&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lualine&amp;#39;&lt;/span&gt;).setup()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-tree&amp;#39;&lt;/span&gt;).setup()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- Treesitter 配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim-treesitter.configs&amp;#39;&lt;/span&gt;).setup {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  highlight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { enable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- LSP 配置&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; lspconfig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lspconfig&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lspconfig.pyright.setup {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lspconfig.lua_ls.setup {}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;-- 自动补全&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;local&lt;/span&gt; cmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; require&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cmp&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cmp.setup({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  snippet &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    expand &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;(args)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      require(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;luasnip&amp;#39;&lt;/span&gt;).lsp_expand(args.body)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  mapping &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cmp.mapping.preset.insert({
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;Tab&amp;gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cmp.mapping.select_next_item(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;S-Tab&amp;gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cmp.mapping.select_prev_item(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;lt;CR&amp;gt;&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cmp.mapping.confirm({ select &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt; }),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sources &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;nvim_lsp&amp;#39;&lt;/span&gt; },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    { name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;luasnip&amp;#39;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;-第六步同步插件&#34;&gt;🧪 第六步：同步插件&lt;/h2&gt;
&lt;p&gt;重启 Neovim，然后执行：&lt;/p&gt;</description>
    </item>
    <item>
      <title>二维卷积实现</title>
      <link>http://localhost:1313/posts/2d-convolution/</link>
      <pubDate>Sat, 31 May 2025 02:58:00 +0800</pubDate>
      <guid>http://localhost:1313/posts/2d-convolution/</guid>
      <description>&lt;h1 id=&#34;二维卷积操作原理解析--c语言与python手写实现&#34;&gt;二维卷积操作：原理解析 + C语言与Python手写实现&lt;/h1&gt;
&lt;h2 id=&#34;一什么是二维卷积&#34;&gt;一、什么是二维卷积？&lt;/h2&gt;
&lt;p&gt;二维卷积（2D Convolution）是图像处理中最基础也最重要的操作之一，广泛应用于：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;图像模糊&lt;/li&gt;
&lt;li&gt;边缘检测&lt;/li&gt;
&lt;li&gt;卷积神经网络（CNN）特征提取&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;通俗地讲：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;把一个小的“滤波器”（也叫“卷积核”）放在图像上一个位置，对应区域的值和卷积核每个位置相乘后加总，结果作为输出图像的一个像素值，然后不断滑动这个核，得到整张图的新图像。&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;二卷积的操作步骤滑动--乘加&#34;&gt;二、卷积的操作步骤（滑动 + 乘加）&lt;/h2&gt;
&lt;p&gt;假设你有：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;原始图像（5×5）&lt;/li&gt;
&lt;li&gt;卷积核（3×3）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;操作过程如下：&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;卷积核放在图像左上角，和 3x3 区域重叠&lt;/li&gt;
&lt;li&gt;对应位置相乘，然后求和&lt;/li&gt;
&lt;li&gt;得到的结果就是输出图像对应位置的像素值&lt;/li&gt;
&lt;li&gt;卷积核向右移动一格，重复以上过程&lt;/li&gt;
&lt;li&gt;到右边边缘后，向下一行移动，从左往右继续滑动&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;示例计算&#34;&gt;示例计算：&lt;/h3&gt;
&lt;p&gt;图像窗口：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1 2 3
4 5 6
7 8 9
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;卷积核：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1  0 -1
1  0 -1
1  0 -1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;计算：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;= 1×1 + 2×0 + 3×(-1)
+ 4×1 + 5×0 + 6×(-1)
+ 7×1 + 8×0 + 9×(-1)
= 1 - 3 + 4 - 6 + 7 - 9 = -6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输出图像中对应位置的值就是 &lt;code&gt;-6&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
    <item>
      <title>LRU 页面置换算法</title>
      <link>http://localhost:1313/posts/lru/</link>
      <pubDate>Sat, 26 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/lru/</guid>
      <description>&lt;hr&gt;
&lt;h1 id=&#34;-lru-页面置换算法&#34;&gt;🚀 LRU 页面置换算法&lt;/h1&gt;
&lt;p&gt;在操作系统内存管理中，除了 FIFO，另一种更聪明且常用的页面置换策略是 —— &lt;strong&gt;LRU 页面置换算法&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-一什么是-lru-页面置换算法&#34;&gt;📌 一、什么是 LRU 页面置换算法？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;LRU（Least Recently Used，最近最少使用）页面置换算法&lt;/strong&gt;是这样一种策略：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;淘汰最近最久未被访问过的页面。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;直白地说&lt;/strong&gt;：如果一个页面很久没用了，那么它以后可能也不怎么用，所以优先把它换出去。&lt;/p&gt;
&lt;h3 id=&#34;-特点&#34;&gt;✅ 特点：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;需要记录页面最近的访问历史&lt;/li&gt;
&lt;li&gt;淘汰“最久没用”的页面，而不是最早进入的&lt;/li&gt;
&lt;li&gt;通常使用&lt;strong&gt;栈（Stack）&lt;/strong&gt;、&lt;strong&gt;链表（List）&lt;/strong&gt; 或 **时间戳（Timestamp）**结构实现&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-二缺页中断机制简介同样适用-lru&#34;&gt;❗ 二、缺页中断机制简介（同样适用 LRU）&lt;/h2&gt;
&lt;p&gt;当访问一个不在内存中的页面时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;触发缺页中断&lt;/li&gt;
&lt;li&gt;如果内存满了，选择最近最久未使用的页面进行置换&lt;/li&gt;
&lt;li&gt;加载新页面并恢复执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;💡 缺页次数依然是评估 LRU 表现的关键指标，通常 &lt;strong&gt;比 FIFO 更少的缺页次数&lt;/strong&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-三lru-算法示例分析&#34;&gt;🧪 三、LRU 算法示例分析&lt;/h2&gt;
&lt;p&gt;假设页面访问序列为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[7, 0, 1, 2, 0, 3, 0, 4]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;帧数 3，使用 LRU 策略：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;步骤&lt;/th&gt;
          &lt;th&gt;页面访问&lt;/th&gt;
          &lt;th&gt;内存状态&lt;/th&gt;
          &lt;th&gt;缺页？&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;7 0&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;7 0 1&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;0 1 2（7 最久未用，被换出）&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0 1 2（已存在）&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6&lt;/td&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;1 2 3（0 最久未用，被换出）&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;2 3 0（1 最久未用，被换出）&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;3 0 4（2 最久未用，被换出）&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;缺页次数：6&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>FIFO 页面置换算法</title>
      <link>http://localhost:1313/posts/fifo/</link>
      <pubDate>Thu, 24 Apr 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/fifo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;学习 FIFO 的总结&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-理解-fifo-页面置换算法&#34;&gt;🧠 理解 FIFO 页面置换算法&lt;/h1&gt;
&lt;p&gt;在操作系统的内存管理中，&lt;strong&gt;页面置换算法&lt;/strong&gt;起着至关重要的作用。当物理内存不足以容纳所有需要的页面时，系统必须选择一部分页面“换出去”，以便为新的页面腾出空间。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-一什么是-fifo-页面置换算法&#34;&gt;📌 一、什么是 FIFO 页面置换算法？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FIFO（First-In, First-Out）页面置换算法&lt;/strong&gt;是一种遵循“谁先进来谁先出去”的策略：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最早进入内存的页面，会最先被淘汰。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这就像排队买票，先排队的先服务，后来的人必须等队列的前面腾出位置。&lt;/p&gt;
&lt;h3 id=&#34;-特点&#34;&gt;✅ 特点：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实现简单&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;队列（Queue）&lt;/strong&gt; 结构模拟&lt;/li&gt;
&lt;li&gt;不考虑页面是否常用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-二缺页中断机制简介&#34;&gt;❗ 二、缺页中断机制简介&lt;/h2&gt;
&lt;p&gt;当一个进程访问某个页面时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果该页面已经在内存中 ✅ → 正常访问&lt;/li&gt;
&lt;li&gt;如果该页面不在内存中 ❌ → 触发 &lt;strong&gt;缺页中断（Page Fault）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;系统将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从磁盘中加载页面&lt;/li&gt;
&lt;li&gt;如内存已满，使用页面置换算法（如 FIFO）决定淘汰哪个页面&lt;/li&gt;
&lt;li&gt;更新内存状态，继续执行程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-缺页中断数就是衡量页面置换算法好坏的指标之一&#34;&gt;💡 缺页中断数就是衡量页面置换算法好坏的指标之一。&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-三fifo-算法示例分析&#34;&gt;🧪 三、FIFO 算法示例分析&lt;/h2&gt;
&lt;p&gt;假设页面访问序列为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[7, 0, 1, 2, 0, 3, 0, 4]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内存帧数为 &lt;code&gt;3&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用 FIFO 策略处理：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;内存状态&lt;/th&gt;
          &lt;th&gt;缺页？&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;7 0&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;7 0 1&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;0 1 2&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0 1 2&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;1 2 3&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;2 3 0&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;3 0 4&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;缺页次数 = 6&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>http://localhost:1313/posts/test/</link>
      <pubDate>Fri, 04 Apr 2025 02:21:54 +0800</pubDate>
      <guid>http://localhost:1313/posts/test/</guid>
      <description>&lt;p&gt;这是测试文章。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
