<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on VSVnakers 主页</title>
    <link>https://vsvnakers.github.io/posts/</link>
    <description>Recent content in Posts on VSVnakers 主页</description>
    <generator>Hugo -- 0.146.7</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 04 Apr 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://vsvnakers.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>FIFO 页面置换算法</title>
      <link>https://vsvnakers.github.io/posts/fifo/</link>
      <pubDate>Fri, 04 Apr 2025 00:00:00 +0000</pubDate>
      <guid>https://vsvnakers.github.io/posts/fifo/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;学习 FIFO 的总结&lt;/p&gt;&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h1 id=&#34;-理解-fifo-页面置换算法&#34;&gt;🧠 理解 FIFO 页面置换算法&lt;/h1&gt;
&lt;h2 id=&#34;123&#34;&gt;在操作系统的内存管理中，&lt;strong&gt;页面置换算法&lt;/strong&gt;起着至关重要的作用。当物理内存不足以容纳所有需要的页面时，系统必须选择一部分页面“换出去”，以便为新的页面腾出空间。
123&lt;/h2&gt;
&lt;h2 id=&#34;-一什么是-fifo-页面置换算法&#34;&gt;📌 一、什么是 FIFO 页面置换算法？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;FIFO（First-In, First-Out）页面置换算法&lt;/strong&gt;是一种遵循“谁先进来谁先出去”的策略：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;最早进入内存的页面，会最先被淘汰。&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;这就像排队买票，先排队的先服务，后来的人必须等队列的前面腾出位置。&lt;/p&gt;
&lt;h3 id=&#34;-特点&#34;&gt;✅ 特点：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;实现简单&lt;/li&gt;
&lt;li&gt;使用&lt;strong&gt;队列（Queue）&lt;/strong&gt; 结构模拟&lt;/li&gt;
&lt;li&gt;不考虑页面是否常用&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-二缺页中断机制简介&#34;&gt;❗ 二、缺页中断机制简介&lt;/h2&gt;
&lt;p&gt;当一个进程访问某个页面时：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果该页面已经在内存中 ✅ → 正常访问&lt;/li&gt;
&lt;li&gt;如果该页面不在内存中 ❌ → 触发 &lt;strong&gt;缺页中断（Page Fault）&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;系统将：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;从磁盘中加载页面&lt;/li&gt;
&lt;li&gt;如内存已满，使用页面置换算法（如 FIFO）决定淘汰哪个页面&lt;/li&gt;
&lt;li&gt;更新内存状态，继续执行程序&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-缺页中断数就是衡量页面置换算法好坏的指标之一&#34;&gt;💡 缺页中断数就是衡量页面置换算法好坏的指标之一。&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;-三fifo-算法示例分析&#34;&gt;🧪 三、FIFO 算法示例分析&lt;/h2&gt;
&lt;p&gt;假设页面访问序列为：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[7, 0, 1, 2, 0, 3, 0, 4]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;内存帧数为 &lt;code&gt;3&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;使用 FIFO 策略处理：&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;操作&lt;/th&gt;
          &lt;th&gt;内存状态&lt;/th&gt;
          &lt;th&gt;缺页？&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;7 0&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1&lt;/td&gt;
          &lt;td&gt;7 0 1&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2&lt;/td&gt;
          &lt;td&gt;0 1 2&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;0 1 2&lt;/td&gt;
          &lt;td&gt;❌&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3&lt;/td&gt;
          &lt;td&gt;1 2 3&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;2 3 0&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4&lt;/td&gt;
          &lt;td&gt;3 0 4&lt;/td&gt;
          &lt;td&gt;✅&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;缺页次数 = 6&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Test</title>
      <link>https://vsvnakers.github.io/posts/test/</link>
      <pubDate>Fri, 04 Apr 2025 02:21:54 +0800</pubDate>
      <guid>https://vsvnakers.github.io/posts/test/</guid>
      <description>&lt;p&gt;这是测试文章。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
